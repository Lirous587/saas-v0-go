basePath: /api
definitions:
  domain.CommentStatus:
    enum:
    - ""
    type: string
    x-enum-varnames:
    - CommentStatusApprove
  domain.InviteTokenKind:
    enum:
    - public
    - secret
    type: string
    x-enum-varnames:
    - publicWay
    - secretWay
  domain.VerifyWay:
    enum:
    - image:click
    type: string
    x-enum-varnames:
    - WayImageClick
  handler.AuthResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/saas_internal_user_handler.UserResponse'
    type: object
  handler.CaptchaAnswerResponse:
    properties:
      audio:
        description: 音频验证码
        type: string
      id:
        example: "0"
        type: string
      image:
        description: 主图片
        type: string
      thumb:
        description: 缩略图
        type: string
      value:
        type: string
      way:
        $ref: '#/definitions/domain.VerifyWay'
    type: object
  handler.CaptchaResponse:
    properties:
      audio:
        description: 音频验证码
        type: string
      id:
        example: "0"
        type: string
      image:
        description: 主图片
        type: string
      thumb:
        description: 缩略图
        type: string
    type: object
  handler.CategoryResponse:
    properties:
      created_at:
        type: integer
      id:
        type: integer
      prefix:
        type: string
      title:
        type: string
    type: object
  handler.CommentListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/handler.CommentResponse'
        type: array
      total:
        type: integer
    type: object
  handler.CommentResponse:
    properties:
      content:
        type: string
      created_at:
        type: integer
      id:
        type: integer
      is_liked:
        type: boolean
      like_count:
        type: integer
      parent_id:
        type: integer
      root_id:
        type: integer
      status:
        $ref: '#/definitions/domain.CommentStatus'
      user:
        $ref: '#/definitions/handler.UserInfo'
    type: object
  handler.CreateCategoryRequest:
    properties:
      prefix:
        maxLength: 20
        type: string
      title:
        maxLength: 10
        type: string
    required:
    - prefix
    - title
    type: object
  handler.CreatePlateRequest:
    properties:
      belong_key:
        maxLength: 50
        type: string
      description:
        maxLength: 60
        type: string
    required:
    - belong_key
    type: object
  handler.EntryRequest:
    properties:
      email:
        type: string
      token:
        type: string
      token_kind:
        allOf:
        - $ref: '#/definitions/domain.InviteTokenKind'
        enum:
        - public
        - secret
    required:
    - email
    - token
    - token_kind
    type: object
  handler.GenInviteTokenRequest:
    properties:
      expire_second:
        type: integer
    required:
    - expire_second
    type: object
  handler.GithubAuthRequest:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  handler.ImgListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/handler.ImgResponse'
        type: array
      total:
        type: integer
    type: object
  handler.ImgResponse:
    properties:
      created_at:
        type: integer
      description:
        type: string
      id:
        type: integer
      updated_at:
        type: integer
      url:
        type: string
    type: object
  handler.InviteRequest:
    properties:
      emails:
        items:
          type: string
        type: array
      expire_second:
        type: integer
    required:
    - emails
    - expire_second
    type: object
  handler.ListUserWithRoleQueryRequestBody:
    properties:
      nickname:
        type: string
      page:
        minimum: 1
        type: integer
      page_size:
        maximum: 20
        minimum: 5
        type: integer
      role_id:
        type: integer
    type: object
  handler.PlanListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/handler.PlanResponse'
        type: array
    type: object
  handler.PlanResponse:
    properties:
      created_at:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      updated_at:
        type: integer
    type: object
  handler.PlateConfigResponse:
    properties:
      created_at:
        type: integer
      if_audit:
        type: boolean
      updated_at:
        type: integer
    type: object
  handler.R2Configure:
    properties:
      access_key_id:
        type: string
      account_id:
        type: string
      delete_bucket:
        type: string
      public_bucket:
        type: string
      public_url_prefix:
        type: string
    type: object
  handler.RefreshTokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  handler.RoleListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/saas_internal_role_handler.RoleResponse'
        type: array
    type: object
  handler.SetPlateConfigRequest:
    properties:
      if_audit:
        type: boolean
    required:
    - if_audit
    type: object
  handler.SetR2ConfigureRequest:
    properties:
      access_key_id:
        type: string
      account_id:
        type: string
      delete_bucket:
        type: string
      public_bucket:
        type: string
      public_url_prefix:
        type: string
      secret_access_key:
        type: string
    required:
    - access_key_id
    - account_id
    - delete_bucket
    - public_bucket
    - public_url_prefix
    - secret_access_key
    type: object
  handler.SetTenantConfigRequest:
    properties:
      if_audit:
        type: boolean
    required:
    - if_audit
    type: object
  handler.TenantConfigResponse:
    properties:
      client_token:
        type: string
      created_at:
        type: integer
      if_audit:
        type: boolean
      updated_at:
        type: integer
    type: object
  handler.TenantListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/handler.TenantResponse'
        type: array
      total:
        type: integer
    type: object
  handler.TenantResponse:
    properties:
      created_at:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: integer
    type: object
  handler.UpdateCategoryRequest:
    properties:
      prefix:
        maxLength: 20
        type: string
      title:
        maxLength: 10
        type: string
    required:
    - prefix
    - title
    type: object
  handler.UpgradeRequest:
    properties:
      plan_id:
        type: integer
    required:
    - plan_id
    type: object
  handler.UserInfo:
    properties:
      avatar:
        type: string
      id:
        type: integer
      nickname:
        type: string
    type: object
  response.errorResponse:
    properties:
      code:
        type: integer
      details:
        additionalProperties: true
        type: object
      message:
        example: Internal server error
        type: string
    type: object
  response.invalidParamsResponse:
    properties:
      code:
        type: integer
      details:
        additionalProperties: true
        type: object
      message:
        example: invalid params
        type: string
    type: object
  response.successResponse:
    properties:
      code:
        example: 2000
        type: integer
      data: {}
      message:
        example: 请求成功
        type: string
    type: object
  saas_internal_comment_handler.CreateRequest:
    properties:
      belong_key:
        maxLength: 50
        type: string
      content:
        type: string
      parent_id:
        type: integer
      tenantID:
        type: integer
    required:
    - belong_key
    - content
    - tenantID
    type: object
  saas_internal_plan_handler.CreateRequest:
    properties:
      description:
        type: string
      name:
        maxLength: 50
        type: string
      price:
        type: number
    required:
    - description
    - name
    - price
    type: object
  saas_internal_plan_handler.UpdateRequest:
    properties:
      description:
        type: string
      name:
        maxLength: 50
        type: string
      price:
        type: number
    required:
    - description
    - name
    - price
    type: object
  saas_internal_role_handler.CreateRequest:
    properties:
      description:
        maxLength: 60
        type: string
      name:
        type: string
    required:
    - name
    type: object
  saas_internal_role_handler.RoleResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      tenant_id:
        type: integer
    type: object
  saas_internal_role_handler.UpdateRequest:
    properties:
      description:
        maxLength: 60
        type: string
      name:
        type: string
    required:
    - name
    type: object
  saas_internal_tenant_handler.CreateRequest:
    properties:
      description:
        maxLength: 120
        type: string
      name:
        type: string
      plan_id:
        type: integer
    required:
    - name
    - plan_id
    type: object
  saas_internal_tenant_handler.UpdateRequest:
    properties:
      description:
        maxLength: 120
        type: string
      id:
        type: string
    required:
    - id
    type: object
  saas_internal_user_handler.UserResponse:
    properties:
      avatar_url:
        type: string
      created_at:
        type: integer
      email:
        type: string
      email_verified:
        type: boolean
      id:
        type: integer
      last_login_at:
        type: integer
      updated_at:
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: lirous@lirous.com
    name: Lirous
    url: https://Lirous.com
  description: 自定义描述
  license:
    name: MIT
    url: https://github.com/Lirous587/go-scaffold/main/LICENSE
  termsOfService: https://Lirous.com
  title: 自定义title
  version: "1.0"
paths:
  /v1/captcha:
    post:
      consumes:
      - application/json
      parameters:
      - enum:
        - image:click
        in: query
        name: way
        type: string
        x-enum-varnames:
        - WayImageClick
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.CaptchaResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: 生成验证码
      tags:
      - captcha
  /v1/captcha/with-answer:
    get:
      consumes:
      - application/json
      description: 创建新的验证码并返回答案（仅用于测试或开发环境）
      parameters:
      - enum:
        - image:click
        in: query
        name: way
        type: string
        x-enum-varnames:
        - WayImageClick
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.CaptchaAnswerResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: 生成带答案的验证码
      tags:
      - captcha
  /v1/comment:
    get:
      consumes:
      - application/json
      parameters:
      - description: 关键词
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.CommentListResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: 获取列表
      tags:
      - comment
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/saas_internal_comment_handler.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.CommentResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 创建
      tags:
      - comment
  /v1/comment/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 评论id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 删除
      tags:
      - comment
  /v1/comment/{tenant_id}/{belong_key}/config:
    get:
      consumes:
      - application/json
      parameters:
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      - description: 板块key
        in: path
        name: belong_key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PlateConfigResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 获取板块级别的评论系统配置
      tags:
      - comment
    put:
      consumes:
      - application/json
      parameters:
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      - description: 板块key
        in: path
        name: belong_key
        required: true
        type: string
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SetPlateConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 设置板块级别的评论系统配置
      tags:
      - comment
  /v1/comment/{tenant_id}/config:
    get:
      consumes:
      - application/json
      parameters:
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TenantConfigResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 获取租户级别的评论系统配置
      tags:
      - comment
    put:
      consumes:
      - application/json
      parameters:
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SetTenantConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 设置租户级别的评论系统配置
      tags:
      - comment
  /v1/comment/{tenant_id}/plate:
    get:
      consumes:
      - application/json
      parameters:
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      - description: 关键词
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 评论板块列表
      tags:
      - comment
    post:
      consumes:
      - application/json
      parameters:
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreatePlateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 新增评论板块
      tags:
      - comment
  /v1/comment/{tenant_id}/plate/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      - description: 板块id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 删除评论板块
      tags:
      - comment
  /v1/img/{tenant_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 关键词
        in: query
        name: keyword
        type: string
      - description: 是否查询回收站图片
        in: query
        name: deleted
        type: boolean
      - description: 分类id
        in: query
        name: category_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.ImgListResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 图片列表
      tags:
      - img
  /v1/img/{tenant_id}/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 是否硬删除
        in: query
        name: hard
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 删除图片
      tags:
      - img
  /v1/img/{tenant_id}/categories:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/handler.CategoryResponse'
                  type: array
              type: object
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 分类列表
      tags:
      - img-category
  /v1/img/{tenant_id}/category:
    post:
      consumes:
      - application/json
      parameters:
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.CategoryResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 创建图片分类
      tags:
      - img-category
  /v1/img/{tenant_id}/category/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 分类id
        in: path
        name: id
        required: true
        type: integer
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 删除图片分类
      tags:
      - img-category
    put:
      consumes:
      - application/json
      parameters:
      - description: 分类id
        in: path
        name: id
        required: true
        type: integer
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.CategoryResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 更新图片分类
      tags:
      - img-category
  /v1/img/{tenant_id}/configure_r2:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.R2Configure'
              type: object
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 获取配置图库R2配置
      tags:
      - img
    put:
      consumes:
      - application/json
      parameters:
      - description: 租户id
        in: path
        name: tenant_id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SetR2ConfigureRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 配置图库R2配置
      tags:
      - img
  /v1/img/{tenant_id}/recycle/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 图片id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 移除回收站图片
      tags:
      - img
    put:
      consumes:
      - application/json
      parameters:
      - description: 图片id
        in: path
        name: id
        required: true
        type: integer
      - description: 图片id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.ImgResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 恢复回收站图片
      tags:
      - img
  /v1/img/{tenant_id}/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传单张图片（支持 jpeg/png/gif/webp/avif/bmp/svg）
      parameters:
      - description: 图片文件
        in: formData
        name: object
        required: true
        type: file
      - description: 自定义图片路径
        in: formData
        name: path
        type: string
      - description: 图片描述
        in: formData
        name: description
        type: string
      - description: 分类id
        in: formData
        name: category_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.ImgResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 上传图片
      tags:
      - img
  /v1/plan:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PlanListResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: 获取列表
      tags:
      - plan
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/saas_internal_plan_handler.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PlanResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 创建
      tags:
      - plan
  /v1/plan/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 删除
      tags:
      - plan
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PlanResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 读取单条数据
      tags:
      - plan
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/saas_internal_plan_handler.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PlanResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 更新
      tags:
      - plan
  /v1/role:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.RoleListResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 获取列表
      tags:
      - role
    post:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/saas_internal_role_handler.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/saas_internal_role_handler.RoleResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 创建
      tags:
      - role
  /v1/role/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 删除
      tags:
      - role
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/saas_internal_role_handler.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/saas_internal_role_handler.RoleResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 更新
      tags:
      - role
  /v1/tenant:
    get:
      consumes:
      - application/json
      parameters:
      - description: 关键词
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TenantListResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: 获取列表
      tags:
      - tenant
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/saas_internal_tenant_handler.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TenantResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 创建
      tags:
      - tenant
  /v1/tenant/:id/users:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListUserWithRoleQueryRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 获取租户下的用户
      tags:
      - tenant
  /v1/tenant/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 删除
      tags:
      - tenant
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TenantResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 读取单条数据
      tags:
      - tenant
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/saas_internal_tenant_handler.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TenantResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 更新
      tags:
      - tenant
  /v1/tenant/{id}/gen_invite_token:
    post:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.GenInviteTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 生成邀请令牌
      tags:
      - tenant
  /v1/tenant/{id}/invite:
    post:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.InviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 邀请指定人员,通过邮箱通知
      tags:
      - tenant
  /v1/tenant/entry/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.EntryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 加入租户
      tags:
      - tenant
  /v1/tenant/upgrade/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpgradeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.TenantResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 升级租户
      tags:
      - tenant
  /v1/user/auth:
    post:
      consumes:
      - application/json
      description: 校验当前访问令牌是否有效
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            $ref: '#/definitions/response.successResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 校验令牌
      tags:
      - user
  /v1/user/auth/github:
    post:
      consumes:
      - application/json
      description: 使用 GitHub OAuth 登录，返回用户信息和令牌
      parameters:
      - description: GitHub 授权码
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.GithubAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.AuthResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.invalidParamsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: GitHub 授权登录
      tags:
      - user
  /v1/user/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/saas_internal_user_handler.UserResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: 获取用户信息
      tags:
      - user
  /v1/user/refresh_token:
    post:
      consumes:
      - application/json
      description: 使用刷新令牌获取新的访问令牌
      parameters:
      - description: refresh_token刷新令牌
        in: header
        name: X-Refresh-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.successResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.RefreshTokenResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: 刷新令牌
      tags:
      - user
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
