package handler

import (
    "{{.Module}}/internal/{{.Domain}}/domain"
)

func domain{{.DomainTitle}}ToResponse({{.Domain}} *domain.{{.DomainTitle}}) *{{.DomainTitle}}Response {
    if {{.Domain}} == nil {
        return nil
    }

    return &{{.DomainTitle}}Response{
        ID:          {{.Domain}}.ID,
        Title:       {{.Domain}}.Title,
        Description: {{.Domain}}.Description,
        CreatedAt:   {{.Domain}}.CreatedAt.Unix(),
        UpdatedAt:   {{.Domain}}.UpdatedAt.Unix(),
    }
}

func domain{{.DomainTitle}}sToResponse({{.Domain}}s []*domain.{{.DomainTitle}}) []*{{.DomainTitle}}Response {
    if len({{.Domain}}s) == 0 {
        return nil
    }

    ret := make([]*{{.DomainTitle}}Response, 0, len({{.Domain}}s))

    for i := range {{.Domain}}s {
        if {{.Domain}}s[i] != nil {
            ret = append(ret, domain{{.DomainTitle}}ToResponse({{.Domain}}s[i]))
        }
    }
    return ret
}

func domain{{.DomainTitle}}ListToResponse(data *domain.{{.DomainTitle}}List) *{{.DomainTitle}}ListResponse {
    if data == nil {
        return nil
    }

    return &{{.DomainTitle}}ListResponse{
        Total: data.Total,
        List:  domain{{.DomainTitle}}sToResponse(data.List),
    }
}
